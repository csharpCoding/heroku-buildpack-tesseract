#!/bin/bash
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

TESSERACT_OCR_VERSION=5.1.0
TESSERACT_OCR_DATA_VERSION=4.1.0

TESSERACT_OCR_TGZ=tesseract-ocr-$TESSERACT_OCR_VERSION.tar.gz

INSTALL_DIR=$BUILD_DIR/.apt/usr/share/tesseract-ocr/
INSTALL_DIR_TRAINING_DATA=$BUILD_DIR/.apt/usr/share/tesseract-ocr/4.1.0/tessdata
TRAINING_DATA_DIR=${HOME}/.apt/usr/share/tesseract-ocr/4.1.0/tessdata
TESSERACT_OCR_DIR=${HOME}/.apt/usr/share/tesseract-ocr/
ENVSCRIPT=$BUILD_DIR/.profile.d/tesseract-ocr.sh

if [[ -f "$ENV_DIR/TESSERACT_OCR_LANGUAGES" ]]; then
  TESSERACT_OCR_LANGUAGES=$(cat "$ENV_DIR/TESSERACT_OCR_LANGUAGES")
else
  TESSERACT_OCR_LANGUAGES=eng
fi

echo "Unpacking Tesseract-OCR binaries"
mkdir -p $INSTALL_DIR
tar -zxvf $TESSERACT_OCR_TGZ -C $INSTALL_DIR

echo 'Getting Tesseract-OCR training data'
mkdir -p "$INSTALL_DIR_TRAINING_DATA"
mkdir -p "$CACHE_DIR/tessdata"
if [ $TESSERACT_OCR_LANGUAGES ]
then
   array=(${TESSERACT_OCR_LANGUAGES//,/ })
   for i in "${!array[@]}"
   do
     lang="${array[i]}"
     echo "$lang" 'training data'

     if [[ -f "$CACHE_DIR/tessdata/$lang/$lang.traineddata" ]]; then
        echo 'Loading Tesseract-OCR model data from cache'
        cp "$CACHE_DIR/tessdata/$lang/$lang.traineddata" "$INSTALL_DIR_TRAINING_DATA/$lang.traineddata"
     else
        echo 'Fetching Tesseract-OCR model data from github'
        curl "https://raw.githubusercontent.com/tesseract-ocr/tessdata/$TESSERACT_OCR_DATA_VERSION/$lang.traineddata" > "$INSTALL_DIR_TRAINING_DATA/$lang.traineddata"
        mkdir -p "$CACHE_DIR/tessdata/$lang"
        cp "$INSTALL_DIR_TRAINING_DATA/$lang.traineddata" "$CACHE_DIR/tessdata/$lang/$lang.traineddata"
     fi
   done
fi

echo "Building runtime environment for Tesseract-OCR"
mkdir -p "$BUILD_DIR/.profile.d"
echo "export PATH=\"$TESSERACT_OCR_DIR/bin:\$PATH\"" > $ENVSCRIPT
echo "export LD_LIBRARY_PATH=\"$TESSERACT_OCR_DIR/lib:\$LD_LIBRARY_PATH\"" >> $ENVSCRIPT
echo "export TESSDATA_PREFIX=\"$TRAINING_DATA_DIR/\"" >> $ENVSCRIPT
